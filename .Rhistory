Means <- tbl_df(x = sapply(sims, function(x) {
mean(rexp(n, lambda))
}))
library('dplyr')
lambda <- 0.2
sd <- 1/lambda
sims <- 1000
n <- 40
Means <- tbl_df(x = sapply(sims, function(x) {
mean(rexp(n, lambda))
}))
for(i in 1: sims){
data <- tbl_df(c(means = apply(sims, mean(rexp(n, lambda)))))
}
for(i in 1: sims){
data <- tbl_df(means = apply(sims, mean(rexp(n, lambda))))
}
data <- NULL
for(i in 1: sims){
data <- tbl_df(x = apply(sims, mean(rexp(n, lambda))))
}
data <- NULL
for(i in 1: sims){
data <- tbl_df(x = mean(rexp(n, lambda)))
}
library('dplyr')
set.seed(1987)
lambda <- 0.2
sd <- 1/lambda
sims <- 1000
n <- 40
data <- NULL
for(i in 1: sims){
data <- tbl_df(x = mean(rexp(n, lambda)))
}
library('dplyr')
set.seed(1987)
lambda <- 0.2
sd <- 1/lambda
sims <- 1000
n <- 40
data <- NULL
for(i in 1: sims){
data <- tbl_df(x = mean(rexp(n, lambda)))
}
library('dplyr')
set.seed(1987)
lambda <- 0.2
sd <- 1/lambda
sims <- 1000
n <- 40
data <- NULL
for(i in 1: sims){
data <- as.data.frame(x = mean(rexp(n, lambda)))
}
View(data)
hist(data)
i
hist(data)
View(data)
View(data$)
View(data$x)
hist(data$x)
View(data)
View(data)
hist(data$mean(rexp(n,lambda)))
data <- c(colnames("x"))
data
for(i in 1 : sims){
data <- as.data.frame(x = mean(rexp(n, lambda)), row.names = 'x')
}
View(data)
for(i in 1 : sims){
data <- as.data.frame(x = mean(rexp(n, lambda)), col.names = 'x')
}
View(data)
data <- NULL
for(i in 1 : sims){
data <- c(data, mean(rexp(n, lambda)))
}
data
data <- NULL
for(i in 1 : sims){
data <- tbl_df(c(data, mean(rexp(n, lambda))))
}
data <- NULL
for(i in 1 : sims){
data <- as.data.frame(c(data, mean(rexp(n, lambda))))
}
data <- NULL
for(i in 1 : sims){
data <- c(data, mean(rexp(n, lambda)))
}
hist(data)
hist(data)
acutal_mean <- mean(data)
theoretical_mean <- 1/lambda
hist(data, abline = theoretical_mean, abline = actual_mean)
hist(data, abline = 'theoretical_mean', abline = 'actual_mean')
abline (v = 'theoretical_mean', v = 'actual_mean')
abline (v = theoretical_mean, v = actual_mean)
abline (v = theoretical_mean)
abline(v = actual_mean)
library('dplyr')
set.seed(1987)
lambda <- 0.2
sd <- 1/lambda
sims <- 1000
n <- 40
data <- NULL
for(i in 1 : sims){
data <- c(data, mean(rexp(n, lambda)))
}
theoretical_mean <- 1/lambda
acutal_mean <- mean(data)
hist(data)
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'red')
class(actual_mean)
set.seed(1987)
lambda <- 0.2
sd <- 1/lambda
sims <- 1000
n <- 40
data <- NULL
for(i in 1 : sims){
data <- c(data, mean(rexp(n, lambda)))
}
theoretical_mean <- 1/lambda
actual_mean <- mean(data)
hist(data)
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
set.seed(1987)
lambda <- 0.2
sd <- 1/lambda
sims <- 1000
n <- 40
data <- NULL
for(i in 1 : sims){
data <- c(data, mean(rexp(n, lambda)))
}
theoretical_mean <- 1/lambda
actual_mean <- mean(data)
hist(data, breaks = 50)
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 1, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 2, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 3, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 4, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 20, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 5, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 6, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 7, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 8, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 9, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 10, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 11, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 12, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 13, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 14, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 15, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 16, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 17, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 18, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 19, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 21, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 22, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 23, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 24, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 25, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 26, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 22, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 19, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 19, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
actual_std_dev <- sd(rexp(n, lambda))
actual_std_dev
# ---------- Part 1 ----------
# --- Number 1 ---
set.seed(1987)
lambda <- 0.2
sd <- 1/lambda
sims <- 1000
n <- 40
data <- NULL
for(i in 1 : sims){
data <- c(data, mean(rexp(n, lambda)))
}
theoretical_mean <- 1/lambda
theoretical_mean
actual_mean <- mean(data)
actual_mean
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 19, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
# --- Number 2 --- <- sd(rexp(n, lambda))
actual_std_dev <- sd(rexp(n, lambda))
actual_std_dev
# ---------- Part 2 ----------
actual_std_dev <- sd(rexp(n, lambda))
actual_variance <- actual_std_dev^2
actual_variance
theoretical_std_dev <- (1/lambda)/sqrt(n)
theoretical_variance <- theoretical_std_dev^2
theoretical_variance
actual_std_dev
actual_std_dev^2
actual_std_dev <- sd(mean(rexp(n, lambda)))
actual_variance <- actual_std_dev^2
actual_variance
theoretical_std_dev <- (1/lambda)/sqrt(n)
theoretical_variance <- theoretical_std_dev^2
theoretical_variance
actual_std_dev <- sd(data)
actual_variance <- actual_std_dev^2
actual_variance
theoretical_std_dev <- (1/lambda)/sqrt(n)
theoretical_variance <- theoretical_std_dev^2
theoretical_variance
xfit <- seq(min(means_exponentials), max(means_exponentials), length=100)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda/sqrt(n)))
hist(data, breaks = 'Sturges')
lines(xfit, yfit, pch=22, col="black", lty=5)
xfit <- seq(min(data), max(data), length=100)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda)/sqrt(n))
hist(data, breaks = 'Sturges')
lines(xfit, yfit, pch=22, col="black", lty=5)
norm(data, type = 'l')
head(data)
data
x   <- seq(5,15,length=1000)
y   <- dnorm(x,mean=10, sd=3)
plot(x,y, type="l", lwd=1)
xfit <- seq(min(data), max(data), length=1000)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda)/sqrt(n))
hist(data, breaks = 'Sturges')
lines(xfit, yfit, type ='l', pch=22, col='black', lty=5)
xfit <- seq(min(data), max(data), length=1000)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda)/sqrt(n))
hist(data, breaks = 'Sturges', probability = T)
lines(xfit, yfit, type ='l', pch=22, col='black', lty=5)
xfit <- seq(min(data), max(data), length=1000)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda)/sqrt(n))
hist(data, breaks = 'Sturges', probability = T)
lines(xfit, yfit, type ='l', lwd = 1)
xfit <- seq(min(data), max(data), length=1000)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda)/sqrt(n))
hist(data, breaks = 'Sturges', probability = T)
lines(xfit, yfit, type ='l', lwd = 1, col = 'red')
xfit <- seq(min(data), max(data), length=1000)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda)/sqrt(n))
hist(data, breaks = 'Sturges', probability = T)
lines(xfit, yfit, type ='l', lwd = 1, col = 'red')
legend('topright', pch = 19, col = c('red'), legend = c('Normal Distribution'))
hist(data, breaks = 'Sturges')
abline (v = theoretical_mean, col = 'red')
abline(v = actual_mean, col = 'green')
legend('topright', pch = 19, col = c('red', 'green'), legend = c('Theoretical Mean', 'Actual Mean'))
for(i in 1 : sims){
data <- c(data, mean(rexp(n, lambda)))
}
theoretical_mean <- 1/lambda
theoretical_mean
actual_mean <- mean(data)
actual_mean
theoretical_mean - actual_mean
install.package('tex')
install.packages('tex')
install.packages('pdflatex')
setwd("~/Google Drive/Data Science/coursera_jhu/Course 6 - Statistical Inference/Week 4/Stats_Peer_Assignment1")
actual_variance
theoretical_variance - actual_variance
actual_variance
theoretical_variance
head(data)
data2 <- tbl_df(data)
data2 <- tbl_df(c(data, ))
tooth_growth <- tbl_df(data("ToothGrowth"))
data("ToothGrowth")
library('dplyr')
library("dplyr")
tooth_growth <- tbl_df(ToothGrowth)
tooth_growth
library('dplyr')
tooth_growth <- tbl_df(data('ToothGrowth'))
tooth_growth <- tbl_df(data(ToothGrowth))
library('dplyr')
data('ToothGrowth')
tooth_growth <- tbl_df(ToothGrowth)
tooth_growth
library('ggplot')
library("dplyr")
library("ggplot")
library('ggplot2')
view(tooth_growth)
View(tooth_growth)
summary(tooth_growth)
summary(tooth_growth$len)
View(tooth_growth)
mean_lens <- tooth_growth %>% group_by(supp) %>%
summarise(mean_len = mean(len)) %>%
arrange %>% desc(mean_len)
mean_lens
mean_lens <- tooth_growth %>% group_by(supp) %>%
summarise(mean_len = mean(len)) %>%
arrange %>% desc(mean_len)
mean_lens
mean_lens <- tooth_growth %>% group_by(supp) %>%
summarise(mean_len = mean(len)) %>%
arrange(desc(mean_len))
mean_lens
dose_lens <- tooth_growth %>% filter(tooth_growth$supp == 'OJ') %>%
group_by(dose) %>%
summarise(len_summ = summary(len))
dose_lens
dose_lens <- tooth_growth %>% filter(tooth_growth$supp == 'OJ') %>%
group_by(dose) %>%
summarise(mean_len2 = mean(len))
dose_lens
vc_dose_lens <- tooth_growth %>% filter(tooth_growth$supp == 'VC') %>%
group_by(dose) %>%
summarise(vc_mean_len = mean(len))
vc_dose_lens
oj <- tooth_growth %>% filter(tooth_growth$supp == 'OJ')
summary(oj$len)
vc <- tooth_growth %>% filter(tooth_growth$supp == 'VC')
summary(oj$len)
oj <- tooth_growth %>% filter(tooth_growth$supp == 'OJ')
summary(oj$len)
vc <- tooth_growth %>% filter(tooth_growth$supp == 'VC')
summary(vc$len)
oj_dose_lens <- tooth_growth %>% filter(tooth_growth$supp == 'OJ') %>%
group_by(dose) %>%
summarise(oj_mean_len = mean(len))
oj_dose_lens
vc_dose_lens <- tooth_growth %>% filter(tooth_growth$supp == 'VC') %>%
group_by(dose) %>%
summarise(vc_mean_len = mean(len))
vc_dose_lens
plot <- ggplot(tooth_growth, aes(len, supp))+
geom_point(fill = dose)
plot <- ggplot(tooth_growth, aes(len, supp))+
geom_point()
plot
plot <- ggplot(tooth_growth, aes(supp, len))+
geom_point()
plot
plot <- ggplot(tooth_growth, aes(supp, len))+geom_point()
plot + facet_grid(.~dose)
plot <- ggplot(tooth_growth, aes(supp, len))+geom_point(aes(fill = dose))
plot <- ggplot(tooth_growth, aes(supp, len))+geom_point(aes(fill = dose))
plot
plot <- ggplot(tooth_growth, aes(supp, len, fill = dose))+geom_point()
plot
plot <- ggplot(tooth_growth, aes(supp, len, fill = dose))+geom_point()
plot + facet_grid(.~dose)
plot <- ggplot(tooth_growth, aes(supp, len, fill = dose))+geom_dotplot()
plot <- ggplot(tooth_growth, aes(supp, len, fill = dose))+geom_dotplot()
plot <- ggplot(tooth_growth, aes(supp, len, fill = dose))+geom_dotplot()
plot
plot <- ggplot(tooth_growth, aes(supp, len, fill = dose))+geom_point()
plot + facet_grid(.~dose)
plot <- ggplot(tooth_growth, aes(supp, len))+geom_point()
plot + facet_grid(.~dose)
plot <- ggplot(tooth_growth, aes(supp, len))+geom_point()
plot + facet_grid(.~dose)+
labs(title='Supplements at each dose', x='Tooth Length',y='Supplement')
plot <- ggplot(tooth_growth, aes(supp, len))+geom_point()
plot + facet_grid(.~dose)+
labs(title='Supplements at each dose', y='Tooth Length',x='Supplement')
oj <- tooth_growth %>% filter(tooth_growth$supp == 'OJ')
summary(oj$len)
vc <- tooth_growth %>% filter(tooth_growth$supp == 'VC')
summary(vc$len)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
oj_dose_lens <- tooth_growth %>% filter(tooth_growth$supp == 'OJ') %>%
group_by(dose) %>%
summarise(oj_mean_len = mean(len))
oj_dose_lens
vc_dose_lens <- tooth_growth %>% filter(tooth_growth$supp == 'VC') %>%
group_by(dose) %>%
summarise(vc_mean_len = mean(len))
vc_dose_lens
len <- tooth_growth$len
supp <- tooth_growth$supp
dose <- tooth_growth$dose
t.test(len[supp=="OJ"], len[supp=="VC"], paired = FALSE, var.equal = FALSE)
t.test(oj$len, vc$len, paired = FALSE, var.equal = FALSE)
oj_2 <- tooth_growth %>% filter(dose == 2.0 && supp = 'OJ')
oj_2 <- tooth_growth %>% filter(tooth_growth$dose == 2.0 && tooth_growth$supp = 'OJ')
oj_2 <- tooth_growth %>% filter(tooth_growth$dose == 2.0 && tooth_growth$supp == 'OJ')
oj_2
View(oj_2)
oj_2 <- tooth_growth %>% filter(tooth_growth$dose == 2.0) %>%
filter(tooth_growth$supp == 'OJ')
oj_2 <- filter(tooth_growth, dose == 2.0 && supp == 'OJ')
oj_2
oj_2 <- filter(tooth_growth, dose == 2.0)
oj_2
oj_2 <- filter(tooth_growth, supp = 'OJ')
oj_2 <- filter(tooth_growth, supp = "OJ")
oj_2 <- filter(oj_2, supp == "OJ")
oj_2
oj_2 <- filter(tooth_growth, dose == 2.0)
oj_2 <- filter(oj_2, supp == "OJ")
vc_2 <- filter(tooth_growth, dose == 2.0)
vc_2 <- filter(vc_2, supp == "VC")
t.test(oj_2, vc_2, paired = FALSE, var.equal = FALSE)
vc_2 <- filter(tooth_growth, dose == 2.0)
vc_2 <- filter(vc_2, supp == "VC")
vc_2
t.test(oj_2$len, vc_2$len, paired = FALSE, var.equal = FALSE)
install.package(" pdflatex")
install.packages(" pdflatex")
install.packages("pdflatex")
install.packages("pdftools")
install.packages("MacTeX")
install.packages(c("BH", "cluster", "curl", "DBI", "evaluate", "fields", "formatR", "highr", "Hmisc", "jsonlite", "knitr", "lubridate", "Matrix", "nlme", "openssl", "Rcpp", "rmarkdown", "RMySQL", "rsconnect", "survival", "swirl", "testthat", "TTR", "zoo"))
